"""creating tables

Revision ID: 0db13f31ab5c
Revises: 
Create Date: 2022-04-24 15:51:01.724734

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0db13f31ab5c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('dateAdded', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('dateAdded', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensors_id'), 'sensors', ['id'], unique=False)
    op.create_table('sensorReadings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensorId', sa.Integer(), nullable=True),
    sa.Column('waterFlowRate', sa.Float(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('dateAdded', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sensorId'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensorReadings_id'), 'sensorReadings', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fullName', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phoneNumber', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('homeGPSAddress', sa.String(), nullable=True),
    sa.Column('landMark', sa.String(), nullable=True),
    sa.Column('houseNo', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.Column('sensorId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sensorId'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('association',
    sa.Column('sensorId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sensorId'], ['sensors.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('sensorId', 'userId')
    )
    op.create_table('costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensorId', sa.Integer(), nullable=True),
    sa.Column('volumeUsed', sa.Float(), nullable=True),
    sa.Column('ratePerLitre', sa.Float(), nullable=True),
    sa.Column('totalCost', sa.Float(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sensorId'], ['sensorReadings.sensorId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_costs_id'), 'costs', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensorId', sa.Integer(), nullable=True),
    sa.Column('amountPaid', sa.Float(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('modifyBy', sa.Integer(), nullable=True),
    sa.Column('dateModified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['modifyBy'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sensorId'], ['sensorReadings.sensorId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ratePerLitre', sa.Float(), nullable=True),
    sa.Column('addedBy', sa.Integer(), nullable=True),
    sa.Column('dateAdded', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['addedBy'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rates_id'), 'rates', ['id'], unique=False)
    op.create_table('userRoles',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roleId'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('userId', 'roleId'),
    sa.UniqueConstraint('userId', 'roleId', name='unique_user_role')
    )
    op.create_index(op.f('ix_userRoles_roleId'), 'userRoles', ['roleId'], unique=False)
    op.create_index(op.f('ix_userRoles_userId'), 'userRoles', ['userId'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userRoles_userId'), table_name='userRoles')
    op.drop_index(op.f('ix_userRoles_roleId'), table_name='userRoles')
    op.drop_table('userRoles')
    op.drop_index(op.f('ix_rates_id'), table_name='rates')
    op.drop_table('rates')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_costs_id'), table_name='costs')
    op.drop_table('costs')
    op.drop_table('association')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sensorReadings_id'), table_name='sensorReadings')
    op.drop_table('sensorReadings')
    op.drop_index(op.f('ix_sensors_id'), table_name='sensors')
    op.drop_table('sensors')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
